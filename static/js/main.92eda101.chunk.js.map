{"version":3,"sources":["components/Header/Header.js","components/Video/Video.js","App.js","index.js"],"names":["Header","callBack","getQuery","useState","searchQuery","setSearchQuery","className","icon","faBars","onClick","type","placeholder","value","onChange","event","target","faSearch","faUserCircle","Video","videoId","time","title","description","thumbnail","channel","src","alt","length","slice","App","youtubeData","setYoutubeData","query","setQuery","useEffect","a","Axios","get","params","part","q","maxResults","key","process","REACT_APP_YOUTUBE_API_KEY","then","response","data","items","catch","err","alert","handleYoutubeApiCall","queryString","map","video","id","snippet","publishedAt","thumbnails","medium","url","channelTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAiCeA,EA5BA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBAClCC,EADkC,KACrBC,EADqB,KAGzC,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAiBC,KAAMC,IAAQF,UAAU,cAAcG,QAASR,IAChE,wBAAIK,UAAU,gBAAd,OAGF,yBAAKA,UAAU,iBACb,2BACEI,KAAK,OACLJ,UAAU,qBACVK,YAAY,YACZC,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAAeS,EAAMC,OAAOH,UAEjD,kBAAC,IAAD,CAAiBL,KAAMS,IAAUV,UAAU,oBAAoBG,QAAS,SAAAK,GAAK,OAAIZ,EAASE,OAG5F,yBAAKE,UAAU,gBACb,kBAAC,IAAD,CAAiBC,KAAMU,SCgBhBC,G,uBAxCD,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC7D,OACE,yBAAKlB,UAAU,SACb,yBACEmB,IAAKF,EACLG,IAAKP,EACLb,UAAU,oBAGZ,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,eACZ,0BAAMA,UAAU,SAAhB,gBACCkB,GAGH,0BAAMlB,UAAU,YAEhB,uBAAGA,UAAU,eACX,0BAAMA,UAAU,SAAhB,SACCe,GAGH,0BAAMf,UAAU,YAEhB,uBAAGA,UAAU,qBACX,0BAAMA,UAAU,SAAhB,eACwB,IAAvBgB,EAAYK,OAAe,oBAAsBL,GAGpD,0BAAMhB,UAAU,YAEhB,uBAAGA,UAAU,cACX,0BAAMA,UAAU,SAAhB,gBACCc,EAAKQ,MAAM,EAAG,S,iBCiBVC,MAhDf,WAAgB,IAAD,EACyB1B,mBAAS,IADlC,mBACN2B,EADM,KACOC,EADP,OAG2B5B,mBAAS,IAHpC,gCAIaA,mBAAS,KAJtB,mBAIN6B,EAJM,KAICC,EAJD,KA4Bb,OAtBAC,qBAAU,YACkB,uCAAG,WAAOpB,GAAP,SAAAqB,EAAA,sEACrBC,IAAMC,IAAI,+CAAgD,CAC9DC,OAAQ,CACNC,KAAM,UACNC,EAAGR,EACHS,WAAY,GACZC,IAAKC,gIAAYC,6BAGpBC,MAAK,SAAAC,GAAQ,OAAIf,EAAee,EAASC,KAAKC,UAC9CC,OAAM,SAAAC,GAAG,OAAIC,MAAMD,MAVO,2CAAH,sDAY1BE,KACC,CAACpB,IASF,yBAAK1B,UAAU,OACb,kBAAC,EAAD,CAAQJ,SARU,SAACmD,GAAD,OAAiBpB,EAASoB,MAU5C,yBAAK/C,UAAU,UACW,IAAvBwB,EAAYH,OAAgBG,EAAYwB,KAAI,SAAAC,GAAK,OAChD,kBAAC,EAAD,CACEpC,QAASoC,EAAMC,GAAGrC,QAClBC,KAAMmC,EAAME,QAAQC,YACpBrC,MAAOkC,EAAME,QAAQpC,MACrBC,YAAaiC,EAAME,QAAQnC,YAC3BC,UAAWgC,EAAME,QAAQE,WAAWC,OAAOC,IAC3CrC,QAAS+B,EAAME,QAAQK,kBAErB,QC1CdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.92eda101.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSearch, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = ({ callBack, getQuery }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  \n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar_left\">\n        <FontAwesomeIcon icon={faBars} className=\"burger_icon\" onClick={callBack} />\n        <h3 className=\"navbar_title\">ET</h3>\n      </div>\n      \n      <div className=\"navbar_middle\">\n        <input\n          type=\"text\"\n          className=\"navbar_searchInput\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <FontAwesomeIcon icon={faSearch} className=\"navbar_searchIcon\" onClick={event => getQuery(searchQuery)} />\n      </div>\n      \n      <div className=\"navbar_right\">\n        <FontAwesomeIcon icon={faUserCircle} />\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './Video.css';\n\nconst Video = ({ videoId, time, title, description, thumbnail, channel }) => {\n  return (\n    <div className=\"video\">\n      <img\n        src={thumbnail}\n        alt={videoId}\n        className=\"video_thumbnail\"\n      />\n      \n      <div className=\"video_videoInfo\">\n        <h3 className=\"video_owner\">\n          <span className=\"badge\">Channel name</span>\n          {channel}\n        </h3>\n        \n        <span className=\"divider\"></span>\n        \n        <p className=\"video_title\">\n          <span className=\"badge\">Title</span>\n          {title}\n        </p>\n        \n        <span className=\"divider\"></span>\n        \n        <p className=\"video_description\">\n          <span className=\"badge\">Description</span>\n          {description.length === 0 ? \"No description...\" : description}\n        </p>\n        \n        <span className=\"divider\"></span>\n        \n        <p className=\"video_date\">\n          <span className=\"badge\">published at</span>\n          {time.slice(0, 10)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Header, Video } from \"./components\";\nimport Axios from 'axios';\n\nfunction App() {\n  const [youtubeData, setYoutubeData] = useState([]);\n  // const [toggleSideBar, setToggleSideBar] = useState(false);\n  const [searchedUser, setSearchedUser] = useState([]);\n  const [query, setQuery] = useState('');\n  \n  useEffect(() => {\n    const handleYoutubeApiCall = async (event) => {\n      await Axios.get('https://www.googleapis.com/youtube/v3/search', {\n        params: {\n          part: 'Snippet',\n          q: query,\n          maxResults: 10,\n          key: process.env.REACT_APP_YOUTUBE_API_KEY\n        }\n      })\n      .then(response => setYoutubeData(response.data.items))\n      .catch(err => alert(err));\n    };\n    handleYoutubeApiCall();\n  }, [query]);\n \n const getQueryString = (queryString) => setQuery(queryString);\n  \n  /*const toggleBar = (event) => {\n    toggleSideBar ? setToggleSideBar(false) : setToggleSideBar(true);\n  };*/\n  \n  return (\n    <div className=\"app\">\n      <Header getQuery={getQueryString} />\n      \n      <div className=\"videos\">\n        {youtubeData.length !== 0 ? (youtubeData.map(video => (\n          <Video\n            videoId={video.id.videoId}\n            time={video.snippet.publishedAt}\n            title={video.snippet.title}\n            description={video.snippet.description}\n            thumbnail={video.snippet.thumbnails.medium.url}\n            channel={video.snippet.channelTitle}\n          />\n        ))) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}